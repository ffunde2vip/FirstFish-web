rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isAdmin() {
      return isSignedIn() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    function isPublished() { return resource.data.published == true; }

    // Default deny
    match /{document=**} {
      allow read: if false;
      allow write: if false;
    }

    // Admins registry
    match /admins/{uid} {
      // Пользователь может читать свою запись (узнать, админ ли он)
      allow read: if isSignedIn() && request.auth.uid == uid;
      // Добавлять/удалять админов могут только админы (первого добавить вручную через консоль)
      allow write: if isAdmin();
    }

    // Publicly readable (published), admin-writable collections
    match /promotions/{docId} {
      allow read: if isPublished() || isAdmin();
      allow write: if isAdmin();
    }
    match /beers/{docId} {
      allow read: if isPublished() || isAdmin();
      allow write: if isAdmin();
    }
    match /vacancies/{docId} {
      allow read: if isPublished() || isAdmin();
      allow write: if isAdmin();
    }
    match /stores/{docId} {
      allow read: if isPublished() || isAdmin();
      allow write: if isAdmin();
    }

    // Meta flags (например, meta/seed_v1) — доступны только админам
    match /meta/{docId} {
      allow read, write: if isAdmin();
    }

    // Новости и отзывы
    match /news/{docId} {
      allow read: if isPublished() || isAdmin();
      allow write: if isAdmin();
    }
    match /reviews/{docId} {
      // Чтение всем, запись всем авторизованным (или всем, если не хотите auth — замените на true)
      allow read: if true;
      allow write: if true; // при необходимости: isSignedIn()
    }

    // Конфигурация (например, ссылки на соцсети)
    match /config/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}


